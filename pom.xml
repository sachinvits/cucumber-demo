<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.5.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.sapient</groupId>
	<artifactId>cucumber</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>cucumber</name>
	<description>Demo project for Spring Boot with Cucumber</description>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<java.version>1.8</java.version>
		<selenium.version>3.141.59</selenium.version>
		<!-- <cucumber.version>5.6.0</cucumber.version> -->

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- <cucumber.version>4.2.0</cucumber.version> -->

	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- To generate getters, setters, equals, hascode, toString methods -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- To convert DTO to Entity and back -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-jdk8</artifactId>
			<version>1.2.0.Final</version>
		</dependency>

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>1.2.0.Final</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java8</artifactId>
			<version>4.2.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-spring</artifactId>
			<version>4.2.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>4.2.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>net.masterthought</groupId>
			<artifactId>cucumber-reporting</artifactId>
			<version>4.2.3</version>
		</dependency>
		
		<!-- Selenium -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium.version}</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-server</artifactId>
			<version>${selenium.version}</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-firefox-driver</artifactId>
			<version>${selenium.version}</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-api</artifactId>
			<version>${selenium.version}</version>
		</dependency>		

		<!-- To invoke REST endpoints from Cucumber step definitions -->
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<!-- The Configuration of the development profile -->
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- Specifies the build.profile.id property that must be equal than 
					the name of the directory that contains the profile specific configuration 
					file. Because the name of the directory that contains the configuration file 
					of the development profile is dev, we must set the value of the build.profile.id 
					property to dev. -->
				<build.profile.id>dev</build.profile.id>
				<!-- Only unit tests are run when the development profile is active -->
				<skip.integration.tests>false</skip.integration.tests>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
		</profile>
		<!-- The Configuration of the integration-test profile -->
		<profile>
			<id>integration-test</id>
			<properties>
				<!-- Specifies the build.profile.id property that must be equal than 
					the name of the directory that contains the profile specific configuration 
					file. Because the name of the directory that contains the configuration file 
					of the integration-test profile is integration-test, we must set the value 
					of the build.profile.id property to integration-test. -->
				<build.profile.id>integration-test</build.profile.id>
				<!-- Only integration tests are run when the integration-test profile 
					is active -->
				<skip.integration.tests>false</skip.integration.tests>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
		</profile>
	</profiles>

	<build>

		<plugins>
			<plugin>
			    <groupId>org.codehaus.mojo</groupId>
			    <artifactId>build-helper-maven-plugin</artifactId>
			    <!-- <version>1.9.1</version> -->
			    <executions>
					<!-- Add a new source directory to our build -->
					<execution>
					    <id>add-integration-test-sources</id>
					    <phase>generate-test-sources</phase>
					    <goals>
					        <goal>add-test-source</goal>
					    </goals>
					    <configuration>
					        <!-- Configures the source directory of our integration tests -->
					        <sources>
					            <source>src/it/java</source>
					        </sources>
					    </configuration>
					</execution>
					<!-- Add a new resource directory to our build -->
					<execution>
					    <id>add-integration-test-resources</id>
					    <phase>generate-test-resources</phase>
					    <goals>
					        <goal>add-test-resource</goal>
					    </goals>
					    <configuration>
					        <!-- Configures the resource directory of our integration tests -->
					        <resources>
					            <!--
					                Placeholders that are found from the files located in the configured resource
					                directories are replaced with the property values found from the profile
					                specific configuration file.
					            -->
					            <resource>
					                <filtering>true</filtering>
					                <directory>src/it/resources</directory>
					            </resource>
					        </resources>
					    </configuration>
					</execution>			       
			    </executions>
			</plugin>
			
			<!-- Running Unit Tests -->
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-surefire-plugin</artifactId>
			    <!-- <version>2.18</version> -->
			    <configuration>
			        <!-- Skips unit tests if the value of skip.unit.tests property is true -->
			        <!-- <skipTests>${skip.unit.tests}</skipTests> -->
			        <skipTests>false</skipTests>
			        <!-- Excludes integration tests when unit tests are run -->
			        <excludes>
			            <exclude>**/*.java</exclude>
			        </excludes>
			    </configuration>
			</plugin>		

			<!-- Running Integration tests -->			
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-failsafe-plugin</artifactId>
			    <!-- <version>2.18</version> -->
			    <executions>
			        <!--
			            Invokes both the integration-test and the verify goals of the
			            Failsafe Maven plugin
			        -->
			        <execution>
			            <id>integration-tests</id>
			            <goals>
			                <goal>integration-test</goal>
			                <goal>verify</goal>
			            </goals>
			            <configuration>
			                <!--
			                    Skips integration tests if the value of skip.integration.tests
			                    property is true
			                -->
			                <skipTests>${skip.integration.tests}</skipTests>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>				
					
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>

				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessors>
						<annotationProcessor>lombok.launch.AnnotationProcessorHider$AnnotationProcessor</annotationProcessor>
						<annotationProcessor>org.mapstruct.ap.MappingProcessor</annotationProcessor>
					</annotationProcessors>
				</configuration>
			</plugin>
		</plugins>

	</build>

</project>
